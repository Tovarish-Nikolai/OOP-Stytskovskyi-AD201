<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALIAAAAmCAIAAADvH1ZqAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABlNJREFUeF7tmu9LFFsYx/sj+gN634vwTYQUIr3IQkqUGwj+wIKIsghKS9HFJUkU
        f+AaGkg/KCvBUmIRwRcKkqKIriG1bXFFStTSCLXSSN370XN2mDs72czs7F0vnM8LmXNmPPPMc77Pc55z
        dE84HF5eXp6env5boYiwJQs0sba2xoVCIdiSBeoQDYVCoGShMEHJQmGCkoXCBCULhQmJlMXm5mZPT09O
        Ts7x48e7u7tpyhuKRJNIWbx///7BgweoIRQKnThxYmRkRN5QJJpEyuLhw4dCCj9//iwrK6uurlYJY5eQ
        MFkghbq6ug8fPnCNGtBEcXGxOlXbJSRMFigAHXi9XvSxsrJy4cKFlpYWeU+ROPbs2ZKEO7L49etXZWWl
        3Xn1+/2tra3r6+tDQ0OZmZkic8SDhYWFwsLC9PT0ffv2HTp06K8IGRkZ1DT3799fXV2VjyaOjx8/+nw+
        /IBVp0+fvn79+szMDDGDeXHyDIM/f/785MmTWVlZ586dm5ycpNNNWQQCgaSkpNraWtm2w9evX0kVg4OD
        sm2BjY0NB1UIdczevXvb29tle5uBgYH9+/d7PB58JLtiw4FtJEuC6tixY319fZoZdDY0NNy4cQPncC06
        XYRobGpqKioqEoO/efPm1KlTuMg1WSwvL1+8eBGPUzbadS5phhxjSxNAjmEXIxuWYdeDAiYmJmR7my9f
        vpA22CG7FZF2bZudnT1z5gxzv7i4KLsijI2NYXCc1tZgMHjkyBFt94eUKfVKSkpck0VnZyei4x1Xr161
        m417enrIY9iEeJkYQk3e2BE8ZVcW6BXVki0N3meclJQUkjb6kF2xYcu2z58/5+bmZmdnf/r0SXbpwFQk
        G6d9O0HCh+tN7ejooMcdWSD20tJSpEcK4vNYEeQNC4RCIZInafzly5e9vb0YKm/8CQeywMVowpDPyFWN
        jY0UHChbdsWMddt4OwHK21k7ZNe/Qamk4XgUFgQhno+WBSnfBVkwOl6gYBSpGAwxRxVz+fJlFEMioaS6
        ffs2z1y7do1JEjsR7NDo6uqSv/YnHMji9evXBw8e1CuPtY9iiBUdXeqrgR1slk/siHXbMCk5OTk/P/93
        sfTt2zeyqVtFjx6SOl9nWDpdkwUfVlVVhd0/fvy4cuXK0aNHp6am5L3tZHD37l3uCm0ePnyYGoLIYC9A
        bpAPOcKBLNAccXn27FncAUQhZmCVYbJjt9mibQixubmZaeB52WWT/v5+8S078+jRI75F/k4EIQtDGLsj
        C4auqKgQLhCv0SclPEshzRIjrsneoqKmImNPqFePA+zKQswxCWBubk52RSxkvsl2+p4YbbZoG8MyONOg
        vf2/JI6yIIba2tpE+uVndXU1g2r1EcUjXy7u8m5qOmdhwfTcuXNnS/Y60tPT2WfLRoTx8XH5O1EsLS0V
        FBSQz8hqsmubd+/eUSkXFhZ+//6dpl2bY7GN8ZkVw+quBykzL9Qfsu0qQhaGOHFBFgsLC+fPn7906ZL4
        bOAdv9M+e0I2WiQ92Y4Zu9lCFBbRc8wgTIwhaASObbZoG/UEFfoOspifn/f5fChPtl1FpE+XS07i6d69
        e4FAQLa3EYPyU7Z1tLe366sbQtbiRvR32JUFhRu2Rc+xOBjQsoUexzZbtI2JoSxDrEhWdunAw0+fPjV4
        2EAstQUwUwZZ8Mn0OJcFX1JfX2/Ib0IWWqlPKUeN7fV6ScslJSXaUR1RcuvWLXYB4jFn2JKFWOCi45JA
        9Hg8SUlJ2mGaKzZbt00cDVN4imVLD0n3xYsX0f0uEgwG2Qdp2V3kDyLEoSzwVHl5ebTGxdGydv49OjpK
        IJJU3r59m5aWJtZ1Z2ea0diShSgsgAvZFQ6THjCVYPX7/Zr3XbHZum28t7Oz88CBA0+ePNEWC1b9Z8+e
        EWNxqio00IHh8Fv8y4ttWbB5y83NReBMf2pq6vDwsOinRMfp9NDP3aysLPZy+P3mzZss20Qku/+amprM
        zEzKEcMhgTMsuh6D8/LyxF/IhGHYA1ywl0bchpMiV2y2JVmGxUi2PFS+WMX+mXqCV8vbcQYtPn78WPtT
        2atXr7AnppIzsRBP09PTsrHL2M22Wed/KQtFvFGyUJigZKEwQclCYYKShcIEJQuFCUoWChOULBQmKFko
        TFCyUJigZKGIIhz+B59uYdiNCDQwAAAAAElFTkSuQmCC
</value>
  </data>
</root>